adlogicJobSearch.registered_search_results = [], adlogicJobSearch.unregistered_search_results = [], adlogicJobSearch.registered_pagination_bars = [], adlogicJobSearch.registered_breadcrumbs = [], adlogicJobSearch.discardHashChange = !1,
    function(a) {
        a(window).bind("hashchange", function(e) {
            0 == adlogicJobSearch.discardHashChange && (a.each(adlogicJobSearch.registered_search_results, function(e, r) {
                r.adlogicJobSearch("hashOptions", a.deparam.fragment())
            }), void 0 !== a.deparam.fragment().page && a.each(adlogicJobSearch.registered_pagination_bars, function(e, r) {
                r.adlogicSearchPagination("setPage", a.deparam.fragment().page)
            })), adlogicJobSearch.discardHashChange = !1
        }), a(document).ready(function() {
            a.isEmptyObject(a.deparam.fragment()) || (a.each(adlogicJobSearch.registered_search_results, function(e, r) {
                r.adlogicJobSearch("hashOptions", a.deparam.fragment())
            }), void 0 !== a.deparam.fragment().page && a.each(adlogicJobSearch.registered_pagination_bars, function(e, r) {
                r.adlogicSearchPagination("setPage", a.deparam.fragment().page)
            }))
        })
    }(jQuery),
    function(a) {
        var e, r = {
                searchParams: {},
                template: null
            },
            s = a.extend(r, s),
            t = {},
            o = {
                init: function(s) {
                    1 == (s = a.extend(r, s)).embedded_search ? adlogicJobSearch.unregistered_search_results = adlogicJobSearch.unregistered_search_results.concat(this) : adlogicJobSearch.registered_search_results = adlogicJobSearch.registered_search_results.concat(this), "object" == typeof s.searchParams && (t = a.extend(!0, {}, s.searchParams)), o.getSavedJobs.apply(this, Array({
                        refresh: !0
                    })), a(document).on("click", ".ajb-save-job", function(r) {
                        jobAdId = parseInt(a(this).attr("id").replace("save_job_id_", "")), adlogicJobSearch.sessionManager.adlogicSessionManager("isLoggedIn") ? (a(this).hasClass("saved") ? a.get(adlogicJobSearch.ajaxurl + "?action=removeSavedJob&jobAdId=" + jobAdId, function(r) {
                            a.each(e, function(a, r) {
                                if (r == jobAdId) return e.splice(a), !0
                            })
                        }) : a.get(adlogicJobSearch.ajaxurl + "?action=addSavedJob&jobAdId=" + jobAdId, function(a) {
                            e.push(jobAdId)
                        }), a(this).toggleClass("saved")) : adlogicJobSearch.sessionManager.adlogicSessionManager("showDialog")
                    }), a(document).trigger("adlogicJobSearch.searchPage.init", [a(this), s])
                },
                getSavedJobs: function(r) {
                    void 0 !== r && 1 == r.refresh ? (s.ajaxServer.search("action=searchAllRecruiters") > 0 ? method = "getSavedJobIdsAllRecruiters" : s.ajaxServer.search("action=searchArchiveAds") > 0 ? method = "getArchivedSavedJobIds" : method = "getSavedJobIds", a.ajax(adlogicJobSearch.ajaxurl + "?action=" + method, {
                        beforeSend: function(e) {
                            a(window).bind("beforeunload", function() {
                                e.abort()
                            })
                        },
                        complete: function(r) {
                            a.isArray(r) && (a.each(r, function(e, r) {
                                a("#save_job_id_" + r).toggleClass("saved", !0)
                            }), e = r)
                        }
                    })) : a.isArray(e) && a.each(e, function(e, r) {
                        a("#save_job_id_" + r).toggleClass("saved", !0)
                    })
                },
                hashOptions: function(e) {
                    a.isEmptyObject(e) ? (s.searchParams = a.extend(!0, {}, t), a.each(adlogicJobSearch.registered_pagination_bars, function(a, e) {
                        e.adlogicSearchPagination("setPage", t.currentPage)
                    }), o.update.apply(this, Array({
                        force_update: !1,
                        hash_update: !1
                    }))) : (void 0 !== e.locId && (s.searchParams.location_id = e.locId), void 0 !== e.indId && (s.searchParams.industry_id = e.indId, s.searchParams.industry_name = e.industry_name), void 0 !== e.wtId && (s.searchParams.work_type_id = e.wtId), void 0 !== e.salType && (s.searchParams.salary_type = e.salType), void 0 !== e.salMin && (s.searchParams.salary_min = e.salMin), void 0 !== e.salMax && (s.searchParams.salary_max = e.salMax), void 0 !== e.keyword && (s.searchParams.keywords = e.keyword), void 0 !== e.page && (s.searchParams.currentPage = parseInt(e.page), s.searchParams.from = parseInt(e.page * s.items_per_page) + 1, s.searchParams.to = (parseInt(e.page) + 1) * s.items_per_page), void 0 !== e.costCenter && (s.searchParams.cost_center_id = e.costCenter), void 0 !== e.orgUnit && (s.searchParams.org_unit_id = e.orgUnit), void 0 !== e.listingType && (s.searchParams.internalExternal = e.listingType), void 0 !== e.geoLocationJson && (s.searchParams.geoLocationJson = e.geoLocationJson), o.update.apply(this, Array({
                        force_update: !1,
                        hash_update: !1
                    })))
                },
                options: function(e) {
                    return e && (s = a.extend(!0, s, e)), s
                },
                update: function(e) {
                    var r = this,
                        t = a("#adlogic_job_loading"),
                        i = s.ajaxServer,
                        n = {};
                    void 0 !== s.searchParams.location_id && (i += "&locId=" + s.searchParams.location_id, n.locId = s.searchParams.location_id), void 0 !== s.searchParams.childrenRecruiterIds && (i += "&childrenRecruiterIds=" + s.searchParams.childrenRecruiterIds, n.childrenRecruiterIds = s.searchParams.childrenRecruiterIds), void 0 !== s.searchParams.industry_id && (i += "&indId=" + s.searchParams.industry_id, n.indId = s.searchParams.industry_id), void 0 !== s.searchParams.work_type_id && (i += "&wtId=" + s.searchParams.work_type_id, n.wtId = s.searchParams.work_type_id), void 0 !== s.searchParams.salary_type && (i += "&salaryType=" + s.searchParams.salary_type, n.salType = s.searchParams.salary_type), void 0 !== s.searchParams.salary_min && (i += "&salaryMin=" + s.searchParams.salary_min, n.salMin = s.searchParams.salary_min), void 0 !== s.searchParams.salary_max && (i += "&salaryMax=" + s.searchParams.salary_max, n.salMax = s.searchParams.salary_max), void 0 !== s.searchParams.keywords && (i += "&keyword=" + encodeURIComponent(s.searchParams.keywords), n.keyword = s.searchParams.keywords), void 0 !== s.searchParams.from && (i += "&from=" + s.searchParams.from), void 0 !== s.searchParams.to && (i += "&to=" + s.searchParams.to), void 0 !== s.searchParams.cost_center_id && (i += "&costCenter=" + s.searchParams.cost_center_id, n.costCenter = s.searchParams.cost_center_id), void 0 !== s.searchParams.orgUnit && (i += "&orgUnit=" + s.searchParams.orgUnit, n.orgUnit = s.searchParams.orgUnit), void 0 !== s.searchParams.internalExternal && (i += "&internalExternal=" + s.searchParams.internalExternal, n.listingType = s.searchParams.internalExternal), void 0 !== s.searchParams.geoLocationJson && (i += "&geoLocationJson=" + (a.isEmptyObject(s.searchParams.geoLocationJson) ? "" : s.searchParams.geoLocationJson), n.geoLocationJson = a.isEmptyObject(s.searchParams.geoLocationJson) ? "" : s.searchParams.geoLocationJson), n.page = s.searchParams.currentPage, t.prepend('<span class="adlogic_search_loading_div"></span>'), r.css("opacity", "0.35"), a.blockUI.defaults.css = {};
                    var c = "Searching for all ";
                    void 0 !== s.searchParams.industry_name ? c += s.searchParams.industry_name + " jobs" : c += "jobs", void 0 !== s.searchParams.location_name && (c += " in " + s.searchParams.location_name), a.each(adlogicJobSearch.registered_pagination_bars, function(a, e) {
                        e.css("opacity", "0.35")
                    }), a(document).trigger("adlogicJobSearch.searchPage.pre_job_search", [r, s]), a.post(i, {
                        template: s.template
                    }, function(i) {
                        void 0 !== i.search_results_html ? (r.empty(), r.append(i.search_results_html), void 0 !== e && 1 != e.hash_update || (window.location.href = a.param.fragment(window.location.href, n)), a.each(adlogicJobSearch.registered_pagination_bars, function(e, r) {
                            paginationOptions = {
                                results_count: i.search_results_attributes["@attributes"].count,
                                current_page: s.searchParams.currentPage,
                                items_per_page: i.search_results_attributes["@attributes"].resultsPerPage
                            }, r.adlogicSearchPagination("options", paginationOptions), r.adlogicSearchPagination("setPage", s.searchParams.currentPage), "undefined" != typeof Cufon && a.isFunction(Cufon) && Cufon.refresh()
                        })) : alert("No results received - please refresh page"), "object" == typeof stButtons && stButtons.locateElements(), o.getSavedJobs.apply(this), t.children(".adlogic_search_loading_div").remove(), r.css("opacity", "1"), a.each(adlogicJobSearch.registered_pagination_bars, function(a, e) {
                            e.css("opacity", "1")
                        }), a(document).trigger("adlogicJobSearch.searchPage.post_job_search", [r, s, i])
                    }), r.remove(".adlogic_loading_div")
                }
            };
        a.fn.adlogicJobSearch = function(e) {
            return o[e] ? o[e].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof e && e ? void a.error("Method " + e + " does not exist on jQuery.adlogicJobSearch") : o.init.apply(this, arguments)
        }
    }(jQuery),
    function(a) {
        var e = {
                bound_search: "null",
                results_count: "",
                current_page: 0,
                items_per_page: 10,
                num_display_pages: 10
            },
            r = a.extend(e, r),
            s = !1,
            t = function(e, t) {
                0 == s ? "null" == r.bound_search ? a.each(adlogicJobSearch.registered_search_results, function(a, s) {
                    adlogicJobSearch.discardHashChange = !0, fromPage = e * r.items_per_page + 1, toPage = (e + 1) * r.items_per_page, s.adlogicJobSearch("options", {
                        searchParams: {
                            from: fromPage,
                            to: toPage,
                            currentPage: e
                        }
                    }), s.adlogicJobSearch("update")
                }) : (fromPage = e * r.items_per_page + 1, toPage = (e + 1) * r.items_per_page, a(r.bound_search).adlogicJobSearch("options", {
                    searchParams: {
                        from: fromPage,
                        to: toPage,
                        currentPage: e
                    }
                }), a(r.bound_search).adlogicJobSearch("update")) : s = !1
            },
            o = {
                init: function(r) {
                    adlogicJobSearch.registered_pagination_bars = adlogicJobSearch.registered_pagination_bars.concat(this);
                    var r = a.extend(e, r);
                    s = !0, this.pagination(r.results_count, {
                        current_page: r.current_page,
                        items_per_page: r.items_per_page,
                        num_display_entries: r.num_display_pages,
                        num_edge_entries: 2,
                        callback: t
                    })
                },
                options: function(e) {
                    return e && (r = a.extend(!0, r, e)), r
                },
                setPage: function(a) {
                    s = !0, this.pagination(r.results_count, {
                        current_page: a,
                        items_per_page: r.items_per_page,
                        num_display_entries: r.num_display_pages,
                        num_edge_entries: 2,
                        callback: t
                    })
                }
            };
        a.fn.adlogicSearchPagination = function(e) {
            return o[e] ? o[e].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof e && e ? void a.error("Method " + e + " does not exist on jQuery.adlogicSearchPagination") : o.init.apply(this, arguments)
        }
    }(jQuery),
    function(a) {
        var e = {
                bound_search: "null"
            },
            r = a.extend(e, r),
            s = new Array("{classification}", "{location}", "{worktype}", "{keywords}", "{salary_minimum}", "{salary_maximum}", "{salary_type}", "{current_page}", "{total_pages}", "{results_per_page}", "{from_results}", "{to_results}", "{count_results}", "{total_results}"),
            t = new RegExp('{(classification|worktype|location) translation="([^"]*)"}', "igm"),
            o = {
                init: function(e) {
                    adlogicJobSearch.registered_breadcrumbs = adlogicJobSearch.registered_breadcrumbs.concat(this), r = a.extend(r, e), self = a(this), a(document).bind("adlogicJobSearch.searchPage.post_job_search", function(a, e, r, s) {
                        o.update.apply(self, Array({
                            searchPageObj: e,
                            data: s
                        }))
                    })
                },
                update: function(e) {
                    if ("null" != r.bound_search && e.searchPageObj.attr("id") != a(r.bound_search).attr("id")) return !1;
                    for (this.empty(), new_content = content = r.template, search_query = e.data.search_results_query, classificationsString = "", a.each(search_query.parameters.classifications, function(a, e) {
                            0 != a && (classificationsString += ", "), classificationsString += '<a href="">' + e.displayName + "</a>"
                        }), locationsString = "", a.each(search_query.parameters.locations, function(a, e) {
                            0 != a && (locationsString += ", "), locationsString += '<a href="">' + e.displayName + "</a>"
                        }), worktypesString = "", a.each(search_query.parameters.worktypes, function(a, e) {
                            0 != a && (worktypesString += ", "), worktypesString += '<a href="">' + e.displayName + "</a>"
                        }), data_replacements_array = new Array(classificationsString || "All Classifications", locationsString || "All Locations", worktypesString || "All Work Types", search_query.parameters.keywords ? search_query.parameters.keywords : "N/A", search_query.parameters.salary.min ? "$" + ("HourlyRate" == search_query.parameters.salary.type ? search_query.parameters.salary.min : search_query.parameters.salary.min / 1e3 + "K") : "N/A", search_query.parameters.salary.max ? "$" + ("HourlyRate" == search_query.parameters.salary.type ? search_query.parameters.salary.max : search_query.parameters.salary.max / 1e3 + "K") : "N/A", search_query.parameters.salary.type ? "HourlyRate" == search_query.parameters.salary.type ? "hour" : "year" : "N/A", search_query.pagination.from && search_query.pagination.from > 0 ? (search_query.pagination.from - 1) / search_query.pagination.results_per_page + 1 : 1, Math.ceil(search_query.pagination.total_results / search_query.pagination.results_per_page), search_query.pagination.results_per_page, search_query.pagination.from, search_query.pagination.to > search_query.pagination.total_results ? search_query.pagination.total_results : search_query.pagination.to, search_query.pagination.results_returned, search_query.pagination.total_results); translations = t.exec(content);) {
                        switch (translations[1]) {
                            case "classification":
                                translations[1] = classificationsString || "All " + translations[2];
                                break;
                            case "location":
                                translations[1] = locationsString || "All " + translations[2];
                                break;
                            case "worktype":
                                translations[1] = worktypesString || "All " + translations[2]
                        }
                        new_content = str_replace(translations[0], translations[1], new_content)
                    }
                    this.append(str_replace(s, data_replacements_array, new_content))
                }
            };
        a.fn.adlogicSearchBreadcrumbs = function(e) {
            return o[e] ? o[e].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof e && e ? void a.error("Method " + e + " does not exist on jQuery.adlogicSearchPagination") : o.init.apply(this, arguments)
        }
    }(jQuery);